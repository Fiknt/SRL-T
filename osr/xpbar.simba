{$DEFINE SRL_XPBAR_INCLUDED}
{$IFNDEF SRL_OSR}
  {$I SRL/osr.simba}
{$ENDIF}

type
  ERSXPBarSize = (SMALL, MEDIUM, LARGE);

  TRSXPBar = record(TRSInterface)
    Cache: record
      ClientWidth, ClientHeight: Integer;
      ClientMode: ERSClientMode;

      Bounds: TBox;
    end;
  end;

function TRSXPBar.IsOpen: Boolean;
begin
  Result := Self.Read() > 0;
end;

function TRSXPBar.Open: Boolean;
begin
  if Self.IsOpen() then
    Exit(True);

  Mouse.Click(Minimap.GetXPCircle(), MOUSE_LEFT);

  Result := WaitUntil(Self.IsOpen(), SRL.TruncatedGauss(100, 1000), 3000);
end;

procedure TRSXPBar.Draw(Bitmap: TMufasaBitmap); override;
begin
  if not Self.IsOpen() then
    Exit;

  inherited;
end;

function TRSXPBar.Size: ERSXPBarSize;
begin
  case Self.Bounds.Width of
    140: Result := ERSXPBarSize.LARGE;
    129: Result := ERSXPBarSize.MEDIUM;
    119: Result := ERSXPBarSize.SMALL;
  end;
end;

function TRSXPBar.CustomBoundsFinder(ClientMode: ERSClientMode): TBox;

  function Find(Bitmap: TMufasaBitmap; Area: TBox; out Bounds: TBox): Boolean;
  var
    X, Y: Integer;
  begin
    Result := FindBitmapToleranceIn(Bitmap, X, Y, Area, 5);

    if Result then
    begin
      Bounds.X1 := X;
      Bounds.Y1 := Y;
      Bounds.X2 := X + Bitmap.GetWidth()  - 1;
      Bounds.Y2 := Y + Bitmap.GetHeight() - 1;
    end;
  end;

var
  ClientWidth, ClientHeight: Integer;
  Area: TBox;
begin
  GetClientDimensions(ClientWidth, ClientHeight);
  if (Self.Cache.ClientWidth = ClientWidth) and (Self.Cache.ClientHeight = ClientHeight) and (Self.Cache.ClientMode = ClientMode) then
    Exit(Self.Cache.Bounds);

  // Can only currently be at top of mainscreen in vanilla client
  Area := MainScreen.Bounds;
  Area.Y2 := Area.Y1 + 100;

  if not Find(RSBitmaps.XPBarSmall, Area, Result) and
     not Find(RSBitmaps.XPBarMedium, Area, Result) and
     not Find(RSBitmaps.XPBarLarge, Area, Result) then
    Exit;

  Self.Cache := [ClientWidth, ClientHeight, ClientMode, Result];
end;

procedure TRSXPBar.Setup(Name: String); override;
begin
  inherited;

  Self.BoundsFinder.CustomFunction := @Self.CustomBoundsFinder;
end;

function TRSXPBar.Read: Int32;
var
  B: TBox;
begin
  B := Self.Bounds();

  case Self.Size() of
    ERSXPBarSize.SMALL:  Result := OCR.RecognizeNumber(B, TOCRColorFilter.Create([RSColors.TEXT_WHITE]), RS_FONT_PLAIN_11);
    ERSXPBarSize.MEDIUM: Result := OCR.RecognizeNumber(B, TOCRColorFilter.Create([RSColors.TEXT_WHITE]), RS_FONT_PLAIN_12);
    ERSXPBarSize.LARGE:  Result := OCR.RecognizeNumber(B, TOCRColorFilter.Create([RSColors.TEXT_WHITE]), RS_FONT_BOLD_12);
  end;
end;

var
  XPBar: TRSXPBar;

begin
  XPBar.Setup('XPBar');
end;
